"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9221],{1771:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var o=n(74848),i=n(28453);const a={title:"Node Attachment Rule Customization",description:"Learn how to customize node attachment rules in Joint to control how nodes interact each other within the graph editor.",sidebar_position:2,toc_min_heading_level:2,toc_max_heading_level:6},s=void 0,r={id:"guide_docs/Joint/Advanced/Making-A-Fragment-Like-A-Pro/Node-Attachment-Rule-Customization/Node-Attachment-Rule-Customization",title:"Node Attachment Rule Customization",description:"Learn how to customize node attachment rules in Joint to control how nodes interact each other within the graph editor.",source:"@site/docs/guide_docs/Joint/Advanced/Making-A-Fragment-Like-A-Pro/Node-Attachment-Rule-Customization/Node-Attachment-Rule-Customization.md",sourceDirName:"guide_docs/Joint/Advanced/Making-A-Fragment-Like-A-Pro/Node-Attachment-Rule-Customization",slug:"/guide_docs/Joint/Advanced/Making-A-Fragment-Like-A-Pro/Node-Attachment-Rule-Customization/",permalink:"/Unreal-Joint-Documentation/docs/guide_docs/Joint/Advanced/Making-A-Fragment-Like-A-Pro/Node-Attachment-Rule-Customization/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guide_docs/Joint/Advanced/Making-A-Fragment-Like-A-Pro/Node-Attachment-Rule-Customization/Node-Attachment-Rule-Customization.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Node Attachment Rule Customization",description:"Learn how to customize node attachment rules in Joint to control how nodes interact each other within the graph editor.",sidebar_position:2,toc_min_heading_level:2,toc_max_heading_level:6},sidebar:"GuideSidebar",previous:{title:"Existing Slates For Node Feature Extension",permalink:"/Unreal-Joint-Documentation/docs/guide_docs/Joint/Advanced/Making-A-Fragment-Like-A-Pro/Making-New-Editor-Node/Existing-Convenient-Slates/"},next:{title:"Node Visual Customization",permalink:"/Unreal-Joint-Documentation/docs/guide_docs/Joint/Advanced/Making-A-Fragment-Like-A-Pro/Node-Visual-Customization/"}},c={},d=[{value:"For C++ (Runtime Node Class)",id:"for-c-runtime-node-class",level:2},{value:"For BP",id:"for-bp",level:2}];function h(e){const t={code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Sometimes, you may want to add some restrictions or special behaviors when attaching nodes to each other in Joint's graph editor. This can be achieved by customizing the node attachment rules."}),"\n",(0,o.jsx)(t.h2,{id:"for-c-runtime-node-class",children:"For C++ (Runtime Node Class)"}),"\n",(0,o.jsxs)(t.p,{children:["To customize node attachment rules in C++, you can use the following two functions in your custom node class that inherits ",(0,o.jsx)(t.code,{children:"UJointNodeBase"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"virtual const FJointEdPinConnectionResponse CanAttachThisAtParentNode_Implementation(const UObject* InParentNode) const;\r\nvirtual const FJointEdPinConnectionResponse CanAttachSubNodeOnThis_Implementation(const UObject* InParentNode) const; \n"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"CanAttachThisAtParentNode_Implementation"}),": This function is called when you try to attach the current node to a parent node. You can implement your custom logic here to determine whether the attachment is allowed or not."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"CanAttachSubNodeOnThis_Implementation"}),": This function is called when you try to attach a sub-node to the current node. You can implement your custom logic here to determine whether the attachment is allowed or not."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Both functions should return an ",(0,o.jsx)(t.code,{children:"FJointEdPinConnectionResponse"})," structure, which contains information about whether the attachment is allowed and any relevant messages."]}),"\n",(0,o.jsxs)(t.p,{children:["You can set the response type using the ",(0,o.jsx)(t.code,{children:"EJointEdCanCreateConnectionResponse"})," enum - and here are the available options:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"UENUM(BlueprintType)\r\nnamespace EJointEdCanCreateConnectionResponse\r\n{\r\n\t/** Make the connection; there are no issues (message string is displayed if not empty). */\r\n\tenum Type {\r\n\t\tCONNECT_RESPONSE_MAKE,\r\n\r\n\t\t/** Cannot make this connection; display the message string as an error. */\r\n\t\tCONNECT_RESPONSE_DISALLOW,\r\n\r\n\t\t/** Break all existing connections on A and make the new connection (it's exclusive); display the message string as a warning/notice. */\r\n\t\tCONNECT_RESPONSE_BREAK_OTHERS_A,\r\n\r\n\t\t/** Break all existing connections on B and make the new connection (it's exclusive); display the message string as a warning/notice. */\r\n\t\tCONNECT_RESPONSE_BREAK_OTHERS_B,\r\n\r\n\t\t/** Break all existing connections on A and B, and make the new connection (it's exclusive); display the message string as a warning/notice. */\r\n\t\tCONNECT_RESPONSE_BREAK_OTHERS_AB,\r\n\r\n\t\t/** Make the connection via an intermediate cast node, or some other conversion node. */\r\n\t\tCONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE,\r\n\r\n\t\t/** Make the connection by promoting a lower type to a higher type. Ex: Connecting a Float -> Double, float should become a double */\r\n\t\tCONNECT_RESPONSE_MAKE_WITH_PROMOTION\r\n\t};\r\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"for-bp",children:"For BP"}),"\n",(0,o.jsxs)(t.p,{children:["You can override ",(0,o.jsx)(t.code,{children:"CanAttachSubNodeOnThis"})," and ",(0,o.jsx)(t.code,{children:"CanAttachThisAtParentNode"})," to make a new attachment rule for your nodes."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"img_7.png",src:n(12463).A+"",width:"1201",height:"188"})}),"\n",(0,o.jsx)(t.p,{children:"See the example implementation below that forbids any nodes to be attached to the current node:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"img_9.png",src:n(8641).A+"",width:"739",height:"424"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"img_8.png",src:n(87512).A+"",width:"881",height:"542"})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},12463:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/img_7-6272b403f80eb9db81f770d0065cc86c.png"},87512:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/img_8-570503d4c85d3b782bc501e16ee20909.png"},8641:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/img_9-ac059710211327cee5d0ef9d10715531.png"},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var o=n(96540);const i={},a=o.createContext(i);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);