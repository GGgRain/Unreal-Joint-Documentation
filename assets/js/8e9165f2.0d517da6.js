"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1796],{63772:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=i(74848),o=i(28453);const a={title:"1.12.0",sidebar_position:12,toc_min_heading_level:2,toc_max_heading_level:6,image:"/og-images/my-page.jpg"},r=void 0,s={id:"release_note/JointNative/1_12_0/1_12_0",title:"1.12.0",description:"Minimum required version of Joint: 2.8.0",source:"@site/docs/release_note/JointNative/1_12_0/1_12_0.md",sourceDirName:"release_note/JointNative/1_12_0",slug:"/release_note/JointNative/1_12_0/",permalink:"/Unreal-Joint-Documentation/docs/release_note/JointNative/1_12_0/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/release_note/JointNative/1_12_0/1_12_0.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"1.12.0",sidebar_position:12,toc_min_heading_level:2,toc_max_heading_level:6,image:"/og-images/my-page.jpg"},sidebar:"releaseNoteSidebar",previous:{title:"1.11.0",permalink:"/Unreal-Joint-Documentation/docs/release_note/JointNative/1_11_0/"},next:{title:"1.13.0",permalink:"/Unreal-Joint-Documentation/docs/release_note/JointNative/1_13_0/"}},d={},l=[{value:"Spotlighted",id:"spotlighted",level:3},{value:"Dialogue Participant Module Item",id:"dialogue-participant-module-item",level:4},{value:"Dialogue Widget System Has Been Reworked",id:"dialogue-widget-system-has-been-reworked",level:4},{value:"Use Whatever Widget You Want with DF_DialogueWidget",id:"use-whatever-widget-you-want-with-df_dialoguewidget",level:5},{value:"Version 2 Dialogue Widget",id:"version-2-dialogue-widget",level:5},{value:"DF_DW_Locator_FixOnScreen &amp;&amp; Changed Dialogue Widget Locator Stop Following Speakers (Fix on the current world location)",id:"df_dw_locator_fixonscreen--changed-dialogue-widget-locator-stop-following-speakers-fix-on-the-current-world-location",level:5},{value:"Dialogue Portrait",id:"dialogue-portrait",level:4},{value:"DF_DW_Portrait",id:"df_dw_portrait",level:5},{value:"DF_DW_Portrait_FollowSpeakerAndListener",id:"df_dw_portrait_followspeakerandlistener",level:5},{value:"DF_DW_UpdatePortrait",id:"df_dw_updateportrait",level:5},{value:"Changed",id:"changed",level:3},{value:"DF_SpeakerAndListener&#39; function signature has been changed",id:"df_speakerandlistener-function-signature-has-been-changed",level:4}];function c(e){const t={admonition:"admonition",code:"code",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"Minimum required version of Joint: 2.8.0\nRecommended version of Joint: 2.8.2"})}),"\n",(0,n.jsx)(t.h3,{id:"spotlighted",children:"Spotlighted"}),"\n",(0,n.jsx)(t.h4,{id:"dialogue-participant-module-item",children:"Dialogue Participant Module Item"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img.png",src:i(95777).A+"",width:"889",height:"1182"})}),"\n",(0,n.jsxs)(t.p,{children:["Now Dialogue Participant component has a property named ",(0,n.jsx)(t.code,{children:"Participant Modules"}),", where you can put additional modules for the extended functionality of the component."]}),"\n",(0,n.jsx)(t.p,{children:"This has been introduced to lower the performance bottleneck of the system. We, of course can still use a bunch of components to implement a receiver or identification for the additional features, but adding a lot of components can be problematic for some instances (e.g. replication overhead, etc.)"}),"\n",(0,n.jsxs)(t.p,{children:["For now, we only have ",(0,n.jsx)(t.code,{children:"BP_Joint_PM_NameWidgetVisual"})," that contains the visual of the name box of the participant on the widget."]}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"Unfortunately, Modules doesn't support replication for now. We are considering adding that feature on the future update."})}),"\n",(0,n.jsx)(t.h4,{id:"dialogue-widget-system-has-been-reworked",children:"Dialogue Widget System Has Been Reworked"}),"\n",(0,n.jsx)(t.p,{children:"Customizing Dialogue Widget is one of the most difficult things to the users. Making a whole new widget for the system is quite easy, but the problem is, changing the old widget while making it compatible with the fragments related to it was almost impossible without deep understanding on the dialogue widget's structure."}),"\n",(0,n.jsxs)(t.p,{children:["And most importantly, we initially designed the dialogue widget related fragments as a ",(0,n.jsx)(t.strong,{children:"sample"})," of the system, so we didn't consider adding extensibility over those fragments. So the fragment worked with one specific widget class, and it became one of the main obstacles on the customization."]}),"\n",(0,n.jsx)(t.p,{children:"So, on this update, we decided to change the old framework."}),"\n",(0,n.jsx)(t.h5,{id:"use-whatever-widget-you-want-with-df_dialoguewidget",children:"Use Whatever Widget You Want with DF_DialogueWidget"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_1.png",src:i(95665).A+"",width:"949",height:"408"})}),"\n",(0,n.jsxs)(t.p,{children:["Now ",(0,n.jsx)(t.code,{children:"DF_DialogueWidget"})," takes any kind of ",(0,n.jsx)(t.code,{children:"UUserWidget"})," class that inherits ",(0,n.jsx)(t.code,{children:"WBI_DialogueWidget"})," interface, instead of ",(0,n.jsx)(t.code,{children:"WB_DialogueWidget"})," specifically. ",(0,n.jsx)(t.strong,{children:"You can set it to use any widget class you want to use as a dialogue widget!"})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_3.png",src:i(92579).A+"",width:"925",height:"403"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"WBI_DialogueWidget"})," is an interface that contains basic functions that dialogue widgets must provide. If you want to implement your very own dialogue widget for the system, then you must make your widget inherit this interface class as well, and override its interface functions to provide valid information to it."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_4.png",src:i(62412).A+"",width:"1554",height:"337"})}),"\n",(0,n.jsx)(t.h5,{id:"version-2-dialogue-widget",children:"Version 2 Dialogue Widget"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_5.png",src:i(45301).A+"",width:"1470",height:"481"})}),"\n",(0,n.jsxs)(t.p,{children:["Now we provide a little better version of ",(0,n.jsx)(t.code,{children:"WB_DialogueWidget"})," named ",(0,n.jsx)(t.code,{children:"WB_VER2_DialogueWidget"})," on the system."]}),"\n",(0,n.jsx)(t.h5,{id:"df_dw_locator_fixonscreen--changed-dialogue-widget-locator-stop-following-speakers-fix-on-the-current-world-location",children:"DF_DW_Locator_FixOnScreen && Changed Dialogue Widget Locator Stop Following Speakers (Fix on the current world location)"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_6.png",src:i(59550).A+"",width:"690",height:"282"})}),"\n",(0,n.jsx)(t.p,{children:"We added a fragment that fix the dialogue widget on the screen! It also supports a very cool transition as well."}),"\n",(0,n.jsx)(t.p,{children:"This is very useful for the traditional, screen fixed dialogue for your game."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"pixel-text-box.png",src:i(80186).A+"",width:"498",height:"374"})}),"\n",(0,n.jsxs)(t.p,{children:["You can specify the location where the widget will be rendered on the screen with ",(0,n.jsx)(t.code,{children:"Screen Coordinate"})," property."]}),"\n",(0,n.jsx)(t.p,{children:"(0,0) means the top-left conner of the screen, and (1,1) means bottom-right conner of the screen."}),"\n",(0,n.jsx)(t.p,{children:"For example, if you set it (0.5,1), then the widget will be rendered on the middle-bottom of the screen, just like the old, common dialogue widget on the world.\nIf you want to make it hang up on the screen like the sample image of Undertale, setting it to (0.5,0) will produce the same visual."}),"\n",(0,n.jsxs)(t.p,{children:["You can set ",(0,n.jsx)(t.code,{children:"Immediately Snap"})," to make it immediately snap to the screen without transition."]}),"\n",(0,n.jsx)(t.p,{children:"We thought we already added this one, but it turned out not. But here it is now!"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_7.png",src:i(30887).A+"",width:"1612",height:"166"})}),"\n",(0,n.jsxs)(t.p,{children:["We also changed the logic of Dialogue Widget Locator Stop Following Speakers, and changed its display name to ",(0,n.jsx)(t.code,{children:"Dialogue Widget Locator Stop Following Speakers (Fix on the current world location)"})]}),"\n",(0,n.jsx)(t.p,{children:"Now it works with both mode (screen rendering, world rendering), resulting the widget to be fixed on the screen right away."}),"\n",(0,n.jsx)(t.p,{children:"Try this out on the screen rendering mode. This is one of the coolest features of the dialogue widget locator. Maybe this effect will leave some good impression to your players."}),"\n",(0,n.jsx)(t.h4,{id:"dialogue-portrait",children:"Dialogue Portrait"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_8.png",src:i(87264).A+"",width:"1370",height:"423"})}),"\n",(0,n.jsx)(t.p,{children:"Dialogue widgets now can have portraits for the characters! for this feature, we provide 3 different fragments for the system:"}),"\n",(0,n.jsx)(t.h5,{id:"df_dw_portrait",children:"DF_DW_Portrait"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_9.png",src:i(58441).A+"",width:"1963",height:"468"})}),"\n",(0,n.jsx)(t.p,{children:"A fragment that contains the portrait widget and data for the portrait. You can provide the images that your portrait widget must use here."}),"\n",(0,n.jsxs)(t.p,{children:["This fragment is recommended to be placed on the participant fragment, because ",(0,n.jsx)(t.code,{children:"DF_DW_Portrait_FollowSpeakerAndListener"})," use the parent participant for the identification."]}),"\n",(0,n.jsx)(t.h5,{id:"df_dw_portrait_followspeakerandlistener",children:"DF_DW_Portrait_FollowSpeakerAndListener"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_10.png",src:i(42533).A+"",width:"1302",height:"346"})}),"\n",(0,n.jsx)(t.p,{children:"A fragment that updates the portrait widgets according to the parent Speaker & Listener Fragment's participant setting."}),"\n",(0,n.jsx)(t.p,{children:"This must be placed on the Speaker And Listener Fragment. Otherwise, it won't work correctly."}),"\n",(0,n.jsx)(t.p,{children:"You can change its settings to manipulate the widget visual of the portraits and locations of them:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Flip for Listeners: If true, it will flip the scale of X to -1 of render transform of the listener portraits to make it looks flipped over."}),"\n",(0,n.jsx)(t.li,{children:"Display Listeners: If true, it will display the listener portraits."}),"\n",(0,n.jsx)(t.li,{children:"Margin for Each Speaker: it indicates the amount of spacing that will be applied between each speaker portrait's render position."}),"\n",(0,n.jsx)(t.li,{children:"Margin for Each Listener: it indicates the amount of spacing that will be applied between each listener portrait's render position."}),"\n",(0,n.jsx)(t.li,{children:"Speaker Portrait Offset : it indicates the initial position offset of the speaker portraits"}),"\n",(0,n.jsx)(t.li,{children:"Listener Portrait Offset : it indicates the initial position offset of the listener portraits"}),"\n"]}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"You must provide Dialogue Widget's reference to the fragment to make it work."})}),"\n",(0,n.jsx)(t.h5,{id:"df_dw_updateportrait",children:"DF_DW_UpdatePortrait"}),"\n",(0,n.jsx)(t.p,{children:"Update the provided portrait fragment with provided update data."}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"It's not mandatory to be placed on the speaker and listener."})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_11.png",src:i(59644).A+"",width:"599",height:"741"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"img_12.png",src:i(17751).A+"",width:"747",height:"461"})}),"\n",(0,n.jsx)(t.p,{children:"Each update will happen only when the corresponding update flag (boolean) is checked."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"PortraitImageKey: The name key of the portrait brush it will use."}),"\n",(0,n.jsx)(t.li,{children:"PortraitWidgetRenderTransform: The widget transform that will be applied on the portrait widget itself."}),"\n",(0,n.jsx)(t.li,{children:"PortraitRenderTransform: The widget transform that will be applied on the portrait image."}),"\n",(0,n.jsx)(t.li,{children:"PortraitRenderOpacity: The widget opacity that will be applied on the portrait image."}),"\n",(0,n.jsx)(t.li,{children:"PortraitColor: The color of the portrait image."}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"changed",children:"Changed"}),"\n",(0,n.jsx)(t.h4,{id:"df_speakerandlistener-function-signature-has-been-changed",children:"DF_SpeakerAndListener' function signature has been changed"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"GetAllSpeakers"})," and ",(0,n.jsx)(t.code,{children:"GetAllListeners"})," has been changed to ",(0,n.jsx)(t.code,{children:"GetSpeakerParticipants"}),", ",(0,n.jsx)(t.code,{children:"GetListenerParticipants"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Please update your code or assets to use the new function instead."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},95777:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img-a67e0057a8f020ad9e921a251e6403f8.png"},95665:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_1-66f0dba261e021da52d2d9cccb2bf161.png"},42533:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_10-f4fda1069f68f119193edb3b4cf97087.png"},59644:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_11-c288ec33cbc00e2a8cb99a02a1548a5a.png"},17751:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_12-3296cffe26c4b3363c9a11bc2d3a300d.png"},92579:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_3-075bd57610215de847fafbf5f39af433.png"},62412:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_4-a3c68c882422fef0287b86dfd2cf5af9.png"},45301:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_5-ef93e0c91ce781d642e66c561b4edd5d.png"},59550:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_6-c1081b74b6c417ff171436895ef35176.png"},30887:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_7-935ce4e80f5418e13232c2243c3af203.png"},87264:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_8-b2fbff018a838372b38a66bc6bfb6136.png"},58441:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/img_9-645c5b670c9d3e6357846ffd5cff8741.png"},80186:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/pixel-text-box-95c10724234cb61b79266c80785a2941.png"},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>s});var n=i(96540);const o={},a=n.createContext(o);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);