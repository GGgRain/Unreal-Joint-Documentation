"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1018],{45191:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(74848),a=n(28453);const o={title:"Utilizing Joint Management",sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:6},r=void 0,s={id:"guide_docs/Joint/Advanced/Useful-Editor-Features/Joint-Management/Joint-Management",title:"Utilizing Joint Management",description:"Joint Management is an extensible editor tab that lets you add your own joint related tools.",source:"@site/docs/guide_docs/Joint/Advanced/Useful-Editor-Features/Joint-Management/Joint-Management.md",sourceDirName:"guide_docs/Joint/Advanced/Useful-Editor-Features/Joint-Management",slug:"/guide_docs/Joint/Advanced/Useful-Editor-Features/Joint-Management/",permalink:"/Unreal-Joint-Documentation/docs/guide_docs/Joint/Advanced/Useful-Editor-Features/Joint-Management/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guide_docs/Joint/Advanced/Useful-Editor-Features/Joint-Management/Joint-Management.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Utilizing Joint Management",sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:6},sidebar:"GuideSidebar",previous:{title:"Advanced Graph Editing",permalink:"/Unreal-Joint-Documentation/docs/guide_docs/Joint/Advanced/Useful-Editor-Features/Advanced-Graph-Editing/"},next:{title:"Redirecting Missing Node Classes",permalink:"/Unreal-Joint-Documentation/docs/guide_docs/Joint/Advanced/Useful-Editor-Features/Redirecting-Missing-Node-Class/"}},d={},l=[{value:"Opening Joint Management",id:"opening-joint-management",level:2},{value:"Default Provided Tools",id:"default-provided-tools",level:2},{value:"Editor Utility Tab",id:"editor-utility-tab",level:3},{value:"Node Class Management Tab",id:"node-class-management-tab",level:3},{value:"Redirecting Missing Node Class",id:"redirecting-missing-node-class",level:4},{value:"Node Class Swap (BETA)",id:"node-class-swap-beta",level:4},{value:"Extending Joint Management",id:"extending-joint-management",level:2},{value:"Example",id:"example",level:3}];function c(e){const t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Joint Management is an extensible editor tab that lets you add your own joint related tools."}),"\n",(0,i.jsx)(t.p,{children:"In this document, We're going to cover both what it has by default, and how to extend it with your own tools."}),"\n",(0,i.jsx)(t.h2,{id:"opening-joint-management",children:"Opening Joint Management"}),"\n",(0,i.jsxs)(t.p,{children:["To open Joint Management, go to ",(0,i.jsx)(t.code,{children:"Tools -> Joint Management"})," on the toolbar of the Unreal Editor."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img_1.png",src:n(73786).A+"",width:"831",height:"638"})}),"\n",(0,i.jsx)(t.h2,{id:"default-provided-tools",children:"Default Provided Tools"}),"\n",(0,i.jsx)(t.p,{children:'By default, Joint provides "Editor Utility" and "Node Class Management" tabs for the easy iteration over your project.'}),"\n",(0,i.jsx)(t.h3,{id:"editor-utility-tab",children:"Editor Utility Tab"}),"\n",(0,i.jsx)(t.p,{children:"The Editor Utility tab provides you with a set of utilities that let you perform some very specific tasks related to joints in your project."}),"\n",(0,i.jsx)(t.p,{children:"For example, we mostly add some compatibility related features here, that automatically fix issues that may arise when you update Joint or Unreal Engine versions."}),"\n",(0,i.jsx)(t.p,{children:"And also we provide reset Editor preference setting here - just in case you messed up something and want to go back to default settings."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img.png",src:n(78174).A+"",width:"1315",height:"929"})}),"\n",(0,i.jsx)(t.p,{children:'We also provide a "developer mode" toggle here, that makes some hidden properties visible in Joint editors - useful for debugging or development purposes - we might want you to turn this on when you report issues to us, so that we can get more information about your setup.'}),"\n",(0,i.jsx)(t.h3,{id:"node-class-management-tab",children:"Node Class Management Tab"}),"\n",(0,i.jsx)(t.p,{children:"The Node Class Management tab provides you some functionalities to manage issues for the nodes."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img_2.png",src:n(82097).A+"",width:"1300",height:"919"})}),"\n",(0,i.jsx)(t.h4,{id:"redirecting-missing-node-class",children:"Redirecting Missing Node Class"}),"\n",(0,i.jsx)(t.p,{children:"When you delete or rename a node class that is being used in your project, the nodes that were using that class will become broken, and you will see errors like below when you open the graph editor."}),"\n",(0,i.jsx)(t.p,{children:"Joint provides a way to redirect those missing node classes to new ones, so that you can quickly fix those broken nodes without having to manually fix each of them."}),"\n",(0,i.jsxs)(t.p,{children:["If your project has any missing node classes, they will be listed on the view if you click the ",(0,i.jsx)(t.strong,{children:"Refresh List"})," button."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img_10.png",src:n(71776).A+"",width:"574",height:"135"})}),"\n",(0,i.jsxs)(t.p,{children:["And if you click the ",(0,i.jsx)(t.strong,{children:"Apply"})," button, and press ok to the dialog, it will redirect the node class to the new one."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img_11.png",src:n(26601).A+"",width:"726",height:"463"})}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"The change will be applied after you restart the editor."})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img_12.png",src:n(61458).A+"",width:"733",height:"162"})}),"\n",(0,i.jsxs)(t.p,{children:["You can remove each redirection whenever you need by clicking the ",(0,i.jsx)(t.strong,{children:"Remove Redirection"})," button of them here, or you can visit the ",(0,i.jsx)(t.code,{children:"JointEditorSettings"})," to remove them manually (it hold the redirection data)."]}),"\n",(0,i.jsx)(t.h4,{id:"node-class-swap-beta",children:"Node Class Swap (BETA)"}),"\n",(0,i.jsx)(t.p,{children:"You can now swap the node class of existing nodes to another one! You can either swap editor nodes or node instances."}),"\n",(0,i.jsx)(t.p,{children:"It will try to maintain the node's properties, but it may not be able to maintain all of them depending on the node class."}),"\n",(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsx)(t.p,{children:"This feature is still in BETA and extremely experimental. So it may not work as expected. We recommend you to backup your project before using this feature."})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img_13.png",src:n(26811).A+"",width:"734",height:"298"})}),"\n",(0,i.jsx)(t.h2,{id:"extending-joint-management",children:"Extending Joint Management"}),"\n",(0,i.jsx)(t.admonition,{type:"warning",children:(0,i.jsx)(t.p,{children:"This part is only for the advanced user; You have to have some knowledge about Unreal Engine Editor module development and Slate UI framework to follow this section."})}),"\n",(0,i.jsx)(t.p,{children:"You may want to add your own tools to Joint Management for your own workflow - and Joint provides an easy and elegant way to do that."}),"\n",(0,i.jsxs)(t.p,{children:["To add your own tool to Joint Management, you need to create a new class that inherits from ",(0,i.jsx)(t.code,{children:"IJointManagementSubTab"})," and implement the required functions. This class will be used as an interface to register your tab to Joint Management."]}),"\n",(0,i.jsxs)(t.p,{children:["Here are the important functions you need to look at for ",(0,i.jsx)(t.code,{children:"IJointManagementSubTab"})," implementation:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"GetTabId: You have to return a unique FName for your tab here - this will be used to identify your tab in the tab manager."}),"\n",(0,i.jsxs)(t.li,{children:["RegisterTabSpawner: This is where you actually register your tab contents to the Joint Management tab manager. You can use the ",(0,i.jsx)(t.code,{children:"TabManager->RegisterTabSpawner"})," function to register your tab, and provide a lambda function that returns the contents of your tab."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"And after that, you need to register your tab class to Joint Management Tab Handler during your module startup or elsewhere appropriate."}),"\n",(0,i.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.p,{children:'Here\'s an example of how Joint Native Editor adds the "Joint Native Utility" tab to Joint Management:'}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["In this example, we didn't actually implement the contents of the tab - you can use your own editor slate for it (in this example, we used external ",(0,i.jsx)(t.code,{children:"SJointNativeTab"})," slate for the tab content)."]})}),"\n",(0,i.jsx)(t.p,{children:"In header file:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'#include "Editor/Management/JointManagement.h"\r\n\r\nclass JOINTNATIVEEDITOR_API FJointManagementTab_JointNativeUtility: public IJointManagementSubTab\r\n{\r\n\r\npublic:\r\n\t\r\n\tFJointManagementTab_JointNativeUtility();\r\n\tvirtual ~FJointManagementTab_JointNativeUtility() override;\r\n\r\npublic:\r\n\r\n\tstatic TSharedRef<IJointManagementSubTab> MakeInstance();\r\n\r\npublic:\r\n\t\r\n\tvirtual void RegisterTabSpawner(const TSharedPtr<FTabManager>& TabManager) override;\r\n\r\npublic:\r\n\r\n\tvirtual const FName GetTabId() override;\r\n\tvirtual const ETabState::Type GetInitialTabState() override;\r\n\t\r\n};\n'})}),"\n",(0,i.jsx)(t.p,{children:"In source file:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'FJointManagementTab_JointNativeUtility::FJointManagementTab_JointNativeUtility() : IJointManagementSubTab()\r\n{\r\n}\r\n\r\nFJointManagementTab_JointNativeUtility::~FJointManagementTab_JointNativeUtility()\r\n{\r\n}\r\n\r\nTSharedRef<IJointManagementSubTab> FJointManagementTab_JointNativeUtility::MakeInstance()\r\n{\r\n\treturn MakeShareable(new FJointManagementTab_JointNativeUtility);\r\n}\r\n\r\nvoid FJointManagementTab_JointNativeUtility::RegisterTabSpawner(const TSharedPtr<FTabManager>& TabManager)\r\n{\r\n\tTSharedPtr<FWorkspaceItem> JointNativeEditorGroup = GetParentTabHandler().Pin()->GetActiveGroupFor("JointNativeEditor");\r\n\t\r\n\tif(!JointNativeEditorGroup)\r\n\t{\r\n\t\tJointNativeEditorGroup = TabManager->AddLocalWorkspaceMenuCategory(LOCTEXT("JointNativeEditorGroupName", "Joint Native Editor"));\r\n\r\n\t\tGetParentTabHandler().Pin()->AddActiveGroup("JointNativeEditor", JointNativeEditorGroup);\r\n\t}\r\n\t\r\n\tTabManager->RegisterTabSpawner(\r\n\t\t\tGetTabId()\r\n\t\t\t, FOnSpawnTab::CreateLambda(\r\n\t\t\t\t[=](const FSpawnTabArgs&)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn SNew(SDockTab)\r\n\t\t\t\t\t\t.TabRole(ETabRole::PanelTab)\r\n\t\t\t\t\t\t.Label(LOCTEXT("JointYggdrasilUtility", "Joint Native Utility"))\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tSNew(SJointNativeTab)\r\n\t\t\t\t\t\t];\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t)\r\n\t\t.SetDisplayName(LOCTEXT("EditorUtilityTabTitle", "Joint Native Utility"))\r\n\t\t.SetTooltipText(LOCTEXT("EditorUtilityTooltipText", "Open the Joint Native Utility tab."))\r\n\t\t.SetGroup(JointNativeEditorGroup.ToSharedRef())\r\n\t\t.SetIcon(FSlateIcon(FJointEditorStyle::GetUEEditorSlateStyleSetName(), "ExternalImagePicker.GenerateImageButton"));\r\n}\r\n\r\nconst FName FJointManagementTab_JointNativeUtility::GetTabId()\r\n{\r\n\treturn "TAB_JointNativeUtility";\r\n}\r\n\r\nconst ETabState::Type FJointManagementTab_JointNativeUtility::GetInitialTabState()\r\n{\r\n\treturn IJointManagementSubTab::GetInitialTabState();\r\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Then, you need to register your tab class to Joint Management module during the module startup:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"void FJointNativeEditorModule::StartupModule()\r\n{\r\n\r\n\tif (FJointEditorModule* EditorModule = FJointEditorModule::Get())\r\n\t{\r\n\t\tEditorModule->JointManagementTabHandler->AddSubTab(FJointManagementTab_JointNativeUtility::MakeInstance());\r\n\t}\r\n\t\r\n\tRegisterClassLayout();\r\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"Once you added and registered your tab class, you will see your tab in the Joint Management tab's 'Window' menu!"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img_3.png",src:n(42152).A+"",width:"704",height:"504"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},78174:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/img-4d025c1874880ae7891e9efae91f5351.png"},73786:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/img_1-19e025bf7c6054787f9d9ad6a48737dd.png"},71776:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/img_10-4c13722327e8a8366540b0858cf802f3.png"},26601:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/img_11-9f7407ce7cd460d91e9c04ce2e1b9d8c.png"},61458:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/img_12-8c6c11753e6031a24cd3e697285e14ad.png"},26811:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/img_13-5a5f330ca855311835e3d93266a50fb9.png"},82097:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/img_2-da752e7554b98529f7d140c2c7896062.png"},42152:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/img_3-8f701cbe0b0df60896105201546632af.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var i=n(96540);const a={},o=i.createContext(a);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);