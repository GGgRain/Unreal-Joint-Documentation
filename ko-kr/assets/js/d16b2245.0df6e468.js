"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8663],{505:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"guide_docs/Joint/Fundamentals/Finding-Nodes-And-Fragments/Finding-Nodes-And-Fragments","title":"Finding Nodes And Fragments","description":"Learn how to find Joint Nodes and Fragments in Joint Actor Instances.","source":"@site/docs/guide_docs/Joint/Fundamentals/Finding-Nodes-And-Fragments/Finding-Nodes-And-Fragments.md","sourceDirName":"guide_docs/Joint/Fundamentals/Finding-Nodes-And-Fragments","slug":"/guide_docs/Joint/Fundamentals/Finding-Nodes-And-Fragments/","permalink":"/Unreal-Joint-Documentation/ko-kr/docs/guide_docs/Joint/Fundamentals/Finding-Nodes-And-Fragments/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guide_docs/Joint/Fundamentals/Finding-Nodes-And-Fragments/Finding-Nodes-And-Fragments.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Finding Nodes And Fragments","description":"Learn how to find Joint Nodes and Fragments in Joint Actor Instances.","sidebar_position":4,"toc_min_heading_level":2,"toc_max_heading_level":6},"sidebar":"GuideSidebar","previous":{"title":"Node Execution Chain & Node Lifecycle","permalink":"/Unreal-Joint-Documentation/ko-kr/docs/guide_docs/Joint/Fundamentals/Node-Lifecycle/"},"next":{"title":"Node Pointer & Node Picking","permalink":"/Unreal-Joint-Documentation/ko-kr/docs/guide_docs/Joint/Fundamentals/Node-Pointer-And-Node-Picking/"}}');var t=r(74848),i=r(28453);const d={title:"Finding Nodes And Fragments",description:"Learn how to find Joint Nodes and Fragments in Joint Actor Instances.",sidebar_position:4,toc_min_heading_level:2,toc_max_heading_level:6},a=void 0,c={},o=[{value:"Why Do I Need to Find Nodes or Fragments?",id:"why-do-i-need-to-find-nodes-or-fragments",level:2},{value:"One Solid Recommendation: Using Manager Fragments for Easy External Access",id:"one-solid-recommendation-using-manager-fragments-for-easy-external-access",level:2},{value:"Finding Specific Nodes With GUID ( Recommended for Base Nodes )",id:"finding-specific-nodes-with-guid--recommended-for-base-nodes-",level:3},{value:"Finding Manager Fragments",id:"finding-manager-fragments",level:3},{value:"Finding Fragments",id:"finding-fragments",level:2}];function h(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Sometimes, you need to access specific Joint Nodes or Fragments in your Joint Actor Instances. This guide will walk you through the methods to find and access these components effectively."}),"\n",(0,t.jsx)(n.h2,{id:"why-do-i-need-to-find-nodes-or-fragments",children:"Why Do I Need to Find Nodes or Fragments?"}),"\n",(0,t.jsx)(n.p,{children:"In complex Joint graphs, you may need to manipulate or query specific nodes or fragments during runtime. Finding these components allows you to control playback flow, modify properties, or trigger specific behaviors based on your application's logic."}),"\n",(0,t.jsx)(n.p,{children:"For example, you might want to find a fragment that contains the player controller that indicates the players that can interact with the Joint instance - and feed the controller dynamically based on the game state. This is quite common in multiplayer games where the players can change during the game."}),"\n",(0,t.jsx)(n.h2,{id:"one-solid-recommendation-using-manager-fragments-for-easy-external-access",children:"One Solid Recommendation: Using Manager Fragments for Easy External Access"}),"\n",(0,t.jsx)(n.p,{children:"Keeping the nodes that need to be accessed externally in some place specifically is a good practice. And Manager Fragments are especially good place for that."}),"\n",(0,t.jsxs)(n.p,{children:["So we recommend using ",(0,t.jsx)(n.strong,{children:"Manager Fragments"})," for the nodes or fragments that you want to access externally to make it easier to find them."]}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"You might don't want to use Manager Fragments for everything for some specific reason. In that case, you can still use the methods below to find the nodes and fragments you want."}),(0,t.jsx)(n.p,{children:"In this case, You might try to use a specific node that holds references to the nodes or fragments you want to access, and find that node first via GUID, then access the nodes or fragments from there."})]}),"\n",(0,t.jsx)(n.h3,{id:"finding-specific-nodes-with-guid--recommended-for-base-nodes-",children:"Finding Specific Nodes With GUID ( Recommended for Base Nodes )"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"img_1.png",src:r(13328).A+"",width:"1204",height:"375"})}),"\n",(0,t.jsxs)(n.p,{children:["You can find specific Joint Nodes via their GUIDs with ",(0,t.jsx)(n.code,{children:"Find Base Node with Guid"})," and ",(0,t.jsx)(n.code,{children:"Find Fragment with Guid"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"They will traverse the whole graph to find the node you want."}),"\n",(0,t.jsx)(n.h3,{id:"finding-manager-fragments",children:"Finding Manager Fragments"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"img.png",src:r(74792).A+"",width:"874",height:"515"})}),"\n",(0,t.jsxs)(n.p,{children:["You can get the Joint Manager from the Joint Actor Instance, then use the functions named ",(0,t.jsx)(n.code,{children:"GetManagerFragments~"})," or ",(0,t.jsx)(n.code,{children:"FindManagerFragmentWith~~"})," to find the Manager Fragments you want."]}),"\n",(0,t.jsx)(n.p,{children:"Basically, we provide two types of functions to find the fragments - functions that search only the direct children of the manager (non-recursive), and functions that search the full lower hierarchy of the manager (recursive).\r\nAnd you can query the nodes with either class type or tags."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Description / Notes"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentByClass"})}),(0,t.jsx)(n.td,{children:"Finds the first fragment of the given class attached directly to the manager (no recursion)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentsByClass"})}),(0,t.jsx)(n.td,{children:"Finds all fragments of the given class attached directly to the manager (no recursion)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"GetAllManagerFragments"})}),(0,t.jsx)(n.td,{children:"Returns all fragments attached directly to the manager (no recursion)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentByClassOnLowerHierarchy"})}),(0,t.jsx)(n.td,{children:"Finds the first fragment of the given class by searching the manager's full lower hierarchy (recursive)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentsByClassOnLowerHierarchy"})}),(0,t.jsx)(n.td,{children:"Finds all fragments of the given class in the manager's full lower hierarchy (recursive)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"GetAllManagerFragmentsOnLowerHierarchy"})}),(0,t.jsx)(n.td,{children:"Returns all fragments in the manager's full lower hierarchy (recursive)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentWithTagOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds first fragment matching ",(0,t.jsx)(n.code,{children:"InNodeTag"})," while searching recursively; ",(0,t.jsx)(n.code,{children:"bExact"})," controls exact match."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentsWithTagOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds fragments matching ",(0,t.jsx)(n.code,{children:"InNodeTag"})," recursively; returns all matches."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentWithAnyTagsOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds first fragment that matches any tag from the container recursively; ",(0,t.jsx)(n.code,{children:"bExact"})," optional."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentsWithAnyTagsOnLowerHierarchy"})}),(0,t.jsx)(n.td,{children:"Finds fragments that match any of the provided tags recursively; returns all matches."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentWithAllTagsOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds first fragment that contains all provided tags recursively; ",(0,t.jsx)(n.code,{children:"bExact"})," optional."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentsWithAllTagsOnLowerHierarchy"})}),(0,t.jsx)(n.td,{children:"Finds fragments that contain all provided tags recursively; returns all matches."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentWithTag"})}),(0,t.jsxs)(n.td,{children:["Finds first fragment matching ",(0,t.jsx)(n.code,{children:"InNodeTag"})," among manager's direct children (non-recursive)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentsWithTag"})}),(0,t.jsxs)(n.td,{children:["Finds fragments matching ",(0,t.jsx)(n.code,{children:"InNodeTag"})," among manager's direct children (non-recursive)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentWithAnyTags"})}),(0,t.jsx)(n.td,{children:"Finds first fragment that matches any tag from the container among direct children (non-recursive)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentsWithAnyTags"})}),(0,t.jsx)(n.td,{children:"Finds fragments that match any provided tags among direct children (non-recursive)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentWithAllTags"})}),(0,t.jsx)(n.td,{children:"Finds first fragment that contains all provided tags among direct children (non-recursive)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindManagerFragmentsWithAllTags"})}),(0,t.jsx)(n.td,{children:"Finds fragments that contain all provided tags among direct children (non-recursive)."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"finding-fragments",children:"Finding Fragments"}),"\n",(0,t.jsx)(n.p,{children:"It's quite same as finding Manager Fragments, but this time, you have to call the function from the existing node or fragment that you want to start the search from."}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"You can of course use these functions on the fragment classes as well, to find sub-fragments under the fragment (This is probably the most common use case of these functions)."})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"img_2.png",src:r(971).A+"",width:"889",height:"574"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Description / Notes"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentWithTagOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment matching ",(0,t.jsx)(n.code,{children:"InNodeTag"})," recursively through the lower hierarchy; ",(0,t.jsx)(n.code,{children:"bExact"})," controls exact match."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentsWithTagOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds ",(0,t.jsx)(n.strong,{children:"all"})," fragments matching ",(0,t.jsx)(n.code,{children:"InNodeTag"})," recursively through the lower hierarchy."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentWithAnyTagsOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment that matches ",(0,t.jsx)(n.strong,{children:"any"})," tag in ",(0,t.jsx)(n.code,{children:"InNodeTagContainer"})," recursively; ",(0,t.jsx)(n.code,{children:"bExact"})," optional."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentsWithAnyTagsOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds ",(0,t.jsx)(n.strong,{children:"all"})," fragments that match ",(0,t.jsx)(n.strong,{children:"any"})," tag in ",(0,t.jsx)(n.code,{children:"InNodeTagContainer"})," recursively."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentWithAllTagsOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment that contains ",(0,t.jsx)(n.strong,{children:"all"})," tags in ",(0,t.jsx)(n.code,{children:"InNodeTagContainer"})," recursively; ",(0,t.jsx)(n.code,{children:"bExact"})," optional."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentsWithAllTagsOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds ",(0,t.jsx)(n.strong,{children:"all"})," fragments that contain ",(0,t.jsx)(n.strong,{children:"all"})," tags in ",(0,t.jsx)(n.code,{children:"InNodeTagContainer"})," recursively."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentWithGuidOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment with the specified ",(0,t.jsx)(n.code,{children:"InNodeGuid"})," recursively through the lower hierarchy."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentByClassOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment of the specified class recursively through the lower hierarchy."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentsByClassOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Finds ",(0,t.jsx)(n.strong,{children:"all"})," fragments of the specified class recursively through the lower hierarchy."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"GetAllFragmentsOnLowerHierarchy"})}),(0,t.jsxs)(n.td,{children:["Returns ",(0,t.jsx)(n.strong,{children:"all"})," fragments from the node\u2019s full lower hierarchy (recursive)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentWithTag"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment matching ",(0,t.jsx)(n.code,{children:"InNodeTag"})," among direct child nodes only; ",(0,t.jsx)(n.code,{children:"bExact"})," controls exact match."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentsWithTag"})}),(0,t.jsxs)(n.td,{children:["Finds ",(0,t.jsx)(n.strong,{children:"all"})," fragments matching ",(0,t.jsx)(n.code,{children:"InNodeTag"})," among direct child nodes only."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentWithAnyTags"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment that matches ",(0,t.jsx)(n.strong,{children:"any"})," tag in ",(0,t.jsx)(n.code,{children:"InNodeTagContainer"})," among direct child nodes only; ",(0,t.jsx)(n.code,{children:"bExact"})," optional."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentsWithAnyTags"})}),(0,t.jsxs)(n.td,{children:["Finds ",(0,t.jsx)(n.strong,{children:"all"})," fragments that match ",(0,t.jsx)(n.strong,{children:"any"})," tag in ",(0,t.jsx)(n.code,{children:"InNodeTagContainer"})," among direct child nodes only."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentWithAllTags"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment that contains ",(0,t.jsx)(n.strong,{children:"all"})," tags in ",(0,t.jsx)(n.code,{children:"InNodeTagContainer"})," among direct child nodes only; ",(0,t.jsx)(n.code,{children:"bExact"})," optional."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentsWithAllTags"})}),(0,t.jsxs)(n.td,{children:["Finds ",(0,t.jsx)(n.strong,{children:"all"})," fragments that contain ",(0,t.jsx)(n.strong,{children:"all"})," tags in ",(0,t.jsx)(n.code,{children:"InNodeTagContainer"})," among direct child nodes only."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentWithGuid"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment with the given ",(0,t.jsx)(n.code,{children:"InNodeGuid"})," among direct child nodes only (non-recursive)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentByClass"})}),(0,t.jsxs)(n.td,{children:["Finds the ",(0,t.jsx)(n.strong,{children:"first"})," fragment of the specified class among direct child nodes only (non-recursive)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FindFragmentsByClass"})}),(0,t.jsxs)(n.td,{children:["Finds ",(0,t.jsx)(n.strong,{children:"all"})," fragments of the specified class among direct child nodes only (non-recursive)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"GetAllFragments"})}),(0,t.jsxs)(n.td,{children:["Returns ",(0,t.jsx)(n.strong,{children:"all"})," fragments directly attached to this node (non-recursive)."]})]})]})]})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},74792:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/img-393b8004323fd87b397ef45c34a13f80.png"},13328:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/img_1-a54f98ec936138a4a3717b9c2bdfb6bb.png"},971:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/img_2-990e71132fede266332f248aaa36a52f.png"},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>a});var s=r(96540);const t={},i=s.createContext(t);function d(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);