"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7604],{94376:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=t(74848),s=t(28453);const o={title:"Spawn & Manage Joint Actor Instance with Joint Subsystem",description:"Learn how to work with Joint Subsystem and control existing Joint instances in your world.",sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:6},a=void 0,c={id:"guide_docs/Joint/Fundamentals/Managing-Joint-Actor-Instance/Managing-Joint-Actor-Instance",title:"Spawn & Manage Joint Actor Instance with Joint Subsystem",description:"Learn how to work with Joint Subsystem and control existing Joint instances in your world.",source:"@site/docs/guide_docs/Joint/Fundamentals/Managing-Joint-Actor-Instance/Managing-Joint-Actor-Instance.md",sourceDirName:"guide_docs/Joint/Fundamentals/Managing-Joint-Actor-Instance",slug:"/guide_docs/Joint/Fundamentals/Managing-Joint-Actor-Instance/",permalink:"/Unreal-Joint-Documentation/ko-kr/docs/guide_docs/Joint/Fundamentals/Managing-Joint-Actor-Instance/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guide_docs/Joint/Fundamentals/Managing-Joint-Actor-Instance/Managing-Joint-Actor-Instance.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Spawn & Manage Joint Actor Instance with Joint Subsystem",description:"Learn how to work with Joint Subsystem and control existing Joint instances in your world.",sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:6},sidebar:"GuideSidebar",previous:{title:"Fundamentals",permalink:"/Unreal-Joint-Documentation/ko-kr/docs/category/fundamentals"},next:{title:"Controlling Graph Playback Flow",permalink:"/Unreal-Joint-Documentation/ko-kr/docs/guide_docs/Joint/Fundamentals/Playback-Flow/"}},r={},d=[{value:"Joint Subsystem",id:"joint-subsystem",level:2},{value:"Creating A New Joint Instances",id:"creating-a-new-joint-instances",level:3},{value:"Finding Joint Instances",id:"finding-joint-instances",level:3},{value:"Global Joint Start &amp; End Delegate",id:"global-joint-start--end-delegate",level:3},{value:"Why is my delegate not being called when my Joint starts?",id:"why-is-my-delegate-not-being-called-when-my-joint-starts",level:4}];function l(n){const e={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",p:"p",strong:"strong",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["This document will cover the basic principles of managing & creating & finding Joint instances in your world using ",(0,i.jsx)(e.strong,{children:"Joint Subsystem."})]}),"\n",(0,i.jsx)(e.p,{children:"This part of the system is not a clever or complex one unlike other core features of Joint so the concept is very straight-forward."}),"\n",(0,i.jsx)(e.h2,{id:"joint-subsystem",children:"Joint Subsystem"}),"\n",(0,i.jsx)(e.p,{children:"Joint Subsystem is a game instance subsystem that provides features to create a new Joint actor instance, find and manage existing Joint instances in your world."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"img.png",src:t(33606).A+"",width:"1341",height:"597"})}),"\n",(0,i.jsx)(e.admonition,{type:"note",children:(0,i.jsx)(e.p,{children:"Please notice that these functions are declared as static functions, so you can call them without having to get the subsystem instance first."})}),"\n",(0,i.jsx)(e.h3,{id:"creating-a-new-joint-instances",children:"Creating A New Joint Instances"}),"\n",(0,i.jsxs)(e.p,{children:["You can create a new Joint instance actor with ",(0,i.jsx)(e.code,{children:"CreateJoint"}),". It's just a simple SpawnActor wrapper function that spawns a Joint actor instance in your world, and specifies the Joint Manager to be used for the instance."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"img_1.png",src:t(19442).A+"",width:"874",height:"414"})}),"\n",(0,i.jsx)(e.p,{children:"This function is not replicated or utilizing RPC, so if you want to create Joint instances on multiplayer games, you have to call this function on the server side only."}),"\n",(0,i.jsxs)(e.admonition,{type:"important",children:[(0,i.jsx)(e.p,{children:(0,i.jsxs)(e.strong,{children:["Creating Joint doesn't automatically start the Joint instance! You have to call ",(0,i.jsx)(e.code,{children:"StartJoint"})," function on the created Joint instance to start it."]})}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"img_7.png",src:t(74852).A+"",width:"1056",height:"359"})})]}),"\n",(0,i.jsx)(e.h3,{id:"finding-joint-instances",children:"Finding Joint Instances"}),"\n",(0,i.jsxs)(e.p,{children:["You can find existing Joint instance actor with ",(0,i.jsx)(e.code,{children:"FindJoint, GetAllJoints"}),"."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"img_2.png",src:t(84585).A+"",width:"488",height:"415"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"FindJoint"})," function requires the Joint instance's Guid to find the instance, and returns the Joint actor instance if found."]}),"\n",(0,i.jsx)(e.p,{children:"You can store the Guid of the Joint instance that you want to store and use it later to find the instance."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"img_3.png",src:t(29760).A+"",width:"1075",height:"443"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"GetAllJoints"})," function returns all the existing Joint actor instances in your world as an array."]}),"\n",(0,i.jsx)(e.h3,{id:"global-joint-start--end-delegate",children:"Global Joint Start & End Delegate"}),"\n",(0,i.jsxs)(e.p,{children:["Joint Subsystem also provides delegates for Joint begin & end events, ",(0,i.jsx)(e.code,{children:"OnJointBeginDelegate, OnJointEndDelegate"}),"."]}),"\n",(0,i.jsx)(e.p,{children:"You can access the subsystem on both c++ and bp, and bind events to the delegate to get the Joints that has been played on the session."}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"img_4.png",src:t(88415).A+"",width:"583",height:"597"})}),"\n",(0,i.jsx)(e.h4,{id:"why-is-my-delegate-not-being-called-when-my-joint-starts",children:"Why is my delegate not being called when my Joint starts?"}),"\n",(0,i.jsx)(e.p,{children:"This is one of our most frequently asked questions about Joint Subsystem delegates - and for the most cases the reason is that the delegate binding is happening too late."}),"\n",(0,i.jsx)(e.p,{children:"This happens especially when you bind the delegate on BeginPlay event of an Actor, and the Joint instance has already started before the Actor's BeginPlay event is called. (maybe from the other Actor's BeginPlay event, or from the level's BeginPlay event)"}),"\n",(0,i.jsxs)(e.p,{children:["This issue itself is not avoidable, but we provide a workaround for this issue: you can get the Joint instances that has been played or ended on the current frame with ",(0,i.jsx)(e.code,{children:"GetJointsGuidPlayingOnThisFrame, GetJointsGuidEndedOnThisFrame"}),"."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"img_5.png",src:t(10326).A+"",width:"555",height:"377"})}),"\n",(0,i.jsx)(e.p,{children:"The subsystem will collect those guids every frame, so you can call these functions on your Actor's BeginPlay event to get the Joint instances that has been started or ended on the same frame as your Actor's BeginPlay event."}),"\n",(0,i.jsx)(e.p,{children:"So, you can simply call these functions to see any missout, and then bind the delegates after that. For example, the following blueprint shows how to do that:"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"img_6.png",src:t(1005).A+"",width:"1512",height:"613"})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},33606:(n,e,t)=>{t.d(e,{A:()=>i});const i=t.p+"assets/images/img-ba264f476ea898784b4464edb97a1785.png"},19442:(n,e,t)=>{t.d(e,{A:()=>i});const i=t.p+"assets/images/img_1-ca75cd232bec7096e7c18b43dd012dfd.png"},84585:(n,e,t)=>{t.d(e,{A:()=>i});const i=t.p+"assets/images/img_2-e263a6b15e6ade20475cbfce41616ef7.png"},29760:(n,e,t)=>{t.d(e,{A:()=>i});const i=t.p+"assets/images/img_3-0bc97dbb8bbe85f1ba14a3b0f0349dea.png"},88415:(n,e,t)=>{t.d(e,{A:()=>i});const i=t.p+"assets/images/img_4-7edc4e8ff8fd72e8488fa0dc69c7619f.png"},10326:(n,e,t)=>{t.d(e,{A:()=>i});const i=t.p+"assets/images/img_5-af4f23353107f9f7adc1c5d544e22a2b.png"},1005:(n,e,t)=>{t.d(e,{A:()=>i});const i=t.p+"assets/images/img_6-494499800ba9e6597b17c1a8f6655a78.png"},74852:(n,e,t)=>{t.d(e,{A:()=>i});const i=t.p+"assets/images/img_7-9930c1ef918739e7b11dd59d035d3c74.png"},28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>c});var i=t(96540);const s={},o=i.createContext(s);function a(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);